[
  {
    "op": "core/blank-down",
    "description": "Blank down cells in column id",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "id"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.toTitlecase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given",
          "[restaurant Name And/or Location Not Given"
        ],
        "to": "[restaurant Name And/or Location Not Given]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. New York",
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "to": "U. S. S. New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "to": "Riggs'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "to": "Delmonicos"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "to": "The Merchant's Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Childs",
          "Child's"
        ],
        "to": "Childs"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "to": "Adams' Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "to": "U. S. S. Florida"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"frederik Viii\"",
          "S.S. Frederik Viii"
        ],
        "to": "S.S. \"frederik Viii\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Merchant's Club",
          "Merchants Club"
        ],
        "to": "Merchant's Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "to": "Fraunces' Tavern"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hofbrau Haus",
          "Hof Brau Haus"
        ],
        "to": "Hofbrau Haus"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "to": "Elks Club House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "to": "The New Willard Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley-plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "to": "Copley-plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Café Des Beaux Arts",
          "Café Des Beaux-arts"
        ],
        "to": "Café Des Beaux Arts"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bellevue - Stratford",
          "Bellevue-stratford"
        ],
        "to": "Bellevue - Stratford"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "to": "U. S. S. Wyoming"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "to": "Cosmopolitan Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-carlton Hotel"
        ],
        "to": "Ritz Carlton Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel  Baltimore",
          "Hotel Baltimore"
        ],
        "to": "Hotel  Baltimore"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ritz Carlton",
          "Ritz-carlton"
        ],
        "to": "Ritz Carlton"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Met-life Building",
          "Metlife Building"
        ],
        "to": "Met-life Building"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Waldorf Astoria",
          "Waldorf-astoria"
        ],
        "to": "Waldorf Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley Plaza",
          "Copley-plaza"
        ],
        "to": "Copley Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel La Salle",
          "Hotel Lasalle"
        ],
        "to": "Hotel La Salle"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "to": "Grocers Hall"
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column sponsor using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column sponsor",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Red Star Line - Antwerpen - Ny",
          "Red Star Line - Antwerpen -ny",
          "Red Star Line - Antwerpen Ny",
          "Red Star Line -antwerpen Ny",
          "Red Star Line - Antwerpen  - Ny",
          "Red Star Line - Antwerpen  Ny",
          "Red Star Line - Antwerpen.Ny",
          "Red Star Line -antwerpen - Ny",
          "Red Star Line -antwerpen -ny",
          "Red Star Line- Antwerpen  Ny",
          "Red Star Line- Antwerpen -ny"
        ],
        "to": "Red Star Line - Antwerpen - Ny"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd - Bremen",
          "Norddeutscher Lloyd  Bremen",
          "Norddeutscher Lloyd Bremen;",
          "Norddeutscher Lloyd, Bremen",
          "Norddeutscher Lloyd -  Bremen",
          "Norddeutscher Lloyd -bremen"
        ],
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fifth Avenue Hotel",
          "(fifth Avenue Hotel)",
          "(fifth Avenue Hotel?)",
          "Fifth Avenue Hotel (?)",
          "(fifth Avenue Hotel?}",
          "Fifth Avenue Hotel;"
        ],
        "to": "Fifth Avenue Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Waldorf Astoria",
          "Waldorf-astoria",
          "(waldorf-astoria?)",
          "Waldorf- Astoria",
          "(waldorf-astoria)"
        ],
        "to": "Waldorf Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Nippon Yusen Kaisha - S.S.Kasuga",
          "Nippon Yusen Kaisha - S.S. Kasuga",
          "Nippon Yusen Kaisha -s.S.Kasuga",
          "Nippon Yusen Kaisha -ss Kasuga"
        ],
        "to": "Nippon Yusen Kaisha - S.S.Kasuga"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given]",
          "Restaurant Name And/or Location Not Given",
          "[restaurant Name And/or Location Not Given"
        ],
        "to": "[restaurant Name And/or Location Not Given]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hamburg-amerika Linie",
          "Hamburg Amerika Linie",
          "Hamburg - Amerika Linie",
          "Hamburg- Amerika Linie"
        ],
        "to": "Hamburg-amerika Linie"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Nippon Yusen Kaisha - S.S. Kobe Maru",
          "Nippon Yusen Kaisha - S.S.Kobe Maru",
          "Nippon Yusen Kaisha -s.S.Kobe Maru",
          "Nipppon Yusen Kaisha - S.S. Kobe Maru"
        ],
        "to": "Nippon Yusen Kaisha - S.S. Kobe Maru"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Red Star Line - S.S.Friesland",
          "Red Star Line Ss Friesland",
          "Red Star Line-ss Friesland"
        ],
        "to": "Red Star Line - S.S.Friesland"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cafeteria Lunch",
          "Cafeteria - Lunch",
          "Cafeteria-lunch"
        ],
        "to": "Cafeteria Lunch"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cie Gle Transatlantique",
          "Cie. Gle. Transatlantique",
          "Cie.Gle. Transatlantique"
        ],
        "to": "Cie Gle Transatlantique"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Friendly Sons Of St. Patrick",
          "Friendly Sons Of St Patrick",
          "Friendly Sons Of St.Patrick"
        ],
        "to": "Friendly Sons Of St. Patrick"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Toyo Kisen Kaisha - Hong Kong Maru",
          "Toyo Kisen Kaisha - Hong Kong  Maru",
          "Toyo Kisen Kaisha -hong Kong Maru"
        ],
        "to": "Toyo Kisen Kaisha - Hong Kong Maru"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S. New York",
          "Usms New York",
          "U.S.M.S New York"
        ],
        "to": "U.S.M.S. New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Menzies Hotel",
          "Menzie's Hotel",
          "Menzies'hotel"
        ],
        "to": "Menzies Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Delmonicos",
          "Delmonico's",
          "Delmonicos."
        ],
        "to": "Delmonicos"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Merchant's Club",
          "The Merchants Club",
          "The Merchants' Club"
        ],
        "to": "The Merchant's Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Alta Vista Hotel",
          "(alta Vista Hotel)",
          "Alta Vista Hotel (?)"
        ],
        "to": "Alta Vista Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Red Star Line - S.S.Westernland",
          "Red Star Line - Ss Westernland",
          "Red Star Line S.S.Westernland"
        ],
        "to": "Red Star Line - S.S.Westernland"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Riggs'",
          "Rigg's",
          "Riggs"
        ],
        "to": "Riggs'"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. Raleigh",
          "U.S.S.Raleigh",
          "U.S.S.S.Raleigh"
        ],
        "to": "U.S.S. Raleigh"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Canadian Pacific Railway Co. - S.S. Athabasca",
          "Canadian Pacific Railway Co. - S.S.Athabasca",
          "Canadian Pacific Railway Co.- S.S.Athabasca"
        ],
        "to": "Canadian Pacific Railway Co. - S.S. Athabasca"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen",
          "Nordeutscher Lloyd - Bremen"
        ],
        "to": "Nordeutscher Lloyd Bremen"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Smith & Mc Nells",
          "Smith & Mcnell's",
          "Smith & Mcnells"
        ],
        "to": "Smith & Mc Nells"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hofbrau Haus",
          "Hofbrauhaus",
          "Hof Brau Haus"
        ],
        "to": "Hofbrau Haus"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Red Star Line",
          "(red Star Line)",
          "Red Star Line -"
        ],
        "to": "Red Star Line"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Nippon Yusen Kaisha - S.S.Nasuga",
          "Nippon Yusen Kaisha - S.S. Nasuga",
          "Nippon Yusen Kaisha -s.S.Nasuga"
        ],
        "to": "Nippon Yusen Kaisha - S.S.Nasuga"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. New York",
          "U.S.S. New York",
          "U.S.S. New York (?)"
        ],
        "to": "U. S. S. New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \"queen Mary\"\"\"",
          "R.M.S. \\queen  Mary\\\"\"",
          "R.M.S. \\queen Mary\\\"\""
        ],
        "to": "R.M.S. \"queen Mary\"\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant",
          "Edward F. Lang's Ladies' And Gent's Lunch Room And Restaurant;"
        ],
        "to": "Edward F. Lang's Ladies And Gents Lunch Room And Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(engineers Club)",
          "Engineers Club",
          "Engineers' Club"
        ],
        "to": "(engineers Club)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.",
          "Usms",
          "U.S.M.S"
        ],
        "to": "U.S.M.S."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "American Medical Editors' Association",
          "American Medical Editor's Association",
          "American Medical Editors Association"
        ],
        "to": "American Medical Editors' Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Childs",
          "Childs'",
          "Child's"
        ],
        "to": "Childs"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. Oceanic",
          "Rms Oceanic",
          "R.M.S.Oceanic"
        ],
        "to": "R.M.S. Oceanic"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Merchants' Club",
          "Merchant's Club",
          "Merchants Club"
        ],
        "to": "Merchants' Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Colonial Hotel",
          "(?colonial Hotel?)",
          "(colonial Hotel)"
        ],
        "to": "Colonial Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "?",
          "L"
        ],
        "to": "?"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Societa La Piemontese",
          "Societa'la Piemontese"
        ],
        "to": "Societa La Piemontese"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Oceanic Steamship Company -s.S.Zealander",
          "Oceanic Steamship Company - S.S.Zealander"
        ],
        "to": "Oceanic Steamship Company -s.S.Zealander"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Oceanic Steamship Co. - Sonoma",
          "Oceanic Steamship Co. _ Sonoma"
        ],
        "to": "Oceanic Steamship Co. - Sonoma"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Dupont",
          "Hotel Du Pont"
        ],
        "to": "Hotel Dupont"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(english Hotel Restaurant)",
          "English Hotel Restaurant"
        ],
        "to": "(english Hotel Restaurant)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Mouquin Restaurant And Wine Co",
          "Mouquin Restaurant And Wine Co."
        ],
        "to": "Mouquin Restaurant And Wine Co"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.H. Meyer Rathskeller",
          "A.H.Meyer Rathskeller"
        ],
        "to": "A.H. Meyer Rathskeller"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Usms St Louis",
          "U.S.M.S. St. Louis"
        ],
        "to": "Usms St Louis"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Laurel In The Pines",
          "Laurel-in-the-pines"
        ],
        "to": "Laurel In The Pines"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Oceanic Steamship Co. - Sierra",
          "Oceanic Steamship Co.- Sierra"
        ],
        "to": "Oceanic Steamship Co. - Sierra"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Elks Club House",
          "Elks' Club House"
        ],
        "to": "Elks Club House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S. S. President Wilson",
          "S.S. President Wilson"
        ],
        "to": "S. S. President Wilson"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "to": "The New Willard Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Reuben's",
          "Reuben's."
        ],
        "to": "Reuben's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(emperor Nicholas Ii",
          "Emperor Nicholas Ii"
        ],
        "to": "(emperor Nicholas Ii"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bellevue - Stratford",
          "Bellevue-stratford"
        ],
        "to": "Bellevue - Stratford"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "United Air Lines",
          "United Airlines"
        ],
        "to": "United Air Lines"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Flat Iron Resaurant And Cafe",
          "Flatiron Resaurant And Cafe"
        ],
        "to": "Flat Iron Resaurant And Cafe"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(club)",
          "? Club"
        ],
        "to": "(club)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Baltimore",
          "Hotel  Baltimore"
        ],
        "to": "Hotel Baltimore"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. George's Society",
          "St. Georges Society"
        ],
        "to": "St. George's Society"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New England Shorthand Reporter's Association",
          "New England Shorthand Reporters' Association"
        ],
        "to": "New England Shorthand Reporter's Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Wabash Railway Company",
          "Wabash [railway Company]"
        ],
        "to": "Wabash Railway Company"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley Plaza",
          "Copley-plaza"
        ],
        "to": "Copley Plaza"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Shanley's",
          "Shanleys"
        ],
        "to": "Shanley's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bellevue Stratford Hotel",
          "Bellevue-stratford Hotel"
        ],
        "to": "Bellevue Stratford Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bundeshaus Restaurant",
          "Bundeshausrestaurant"
        ],
        "to": "Bundeshaus Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "American Legation",
          "(american Legation)"
        ],
        "to": "American Legation"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "British Schools And Universities Club Of New York",
          "Britishschools And Universities Club Of New York"
        ],
        "to": "British Schools And Universities Club Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. Amsterdam",
          "S.S.Amsterdam"
        ],
        "to": "S.S. Amsterdam"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Canadian Pacific Railway Co. - S.S. Alberta",
          "Canadian Pacific Railway Co. - S.S.Alberta"
        ],
        "to": "Canadian Pacific Railway Co. - S.S. Alberta"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Schwarzwalder's Natur Weinhaus",
          "Schwarzwalders Natur Weinhaus"
        ],
        "to": "Schwarzwalder's Natur Weinhaus"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Paquebot \\france\\\"\"",
          "Paquebot France"
        ],
        "to": "Paquebot \\france\\\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Café Des Beaux Arts",
          "Café Des Beaux-arts"
        ],
        "to": "Café Des Beaux Arts"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cunard Line-r.M.S. Pavonia",
          "Cunard Line R.M.S. Pavonia"
        ],
        "to": "Cunard Line-r.M.S. Pavonia"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Childs' Lunch Rooms",
          "Child's Lunch Rooms"
        ],
        "to": "Childs' Lunch Rooms"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Red Star Line - S.S. Southwark",
          "Red Star Line - S.S.Southwark"
        ],
        "to": "Red Star Line - S.S. Southwark"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Imperial",
          "Imperial (?)"
        ],
        "to": "Imperial"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Bankers' Club Of Chicago",
          "Bankers Club Of Chicago"
        ],
        "to": "Bankers' Club Of Chicago"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.S. San Francisco",
          "U.S.S.San Francisco"
        ],
        "to": "U.S.S. San Francisco"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Round Table",
          "The Roundtable"
        ],
        "to": "The Round Table"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Knickerbocker",
          "Hotel Knickerbocker (?)"
        ],
        "to": "Hotel Knickerbocker"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(fifth Ave. Hotel)",
          "Fifth Ave. Hotel"
        ],
        "to": "(fifth Ave. Hotel)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Sherry's",
          "Sherrys"
        ],
        "to": "Sherry's"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Union Club",
          "(union Club)"
        ],
        "to": "Union Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. George's Society Of New York",
          "St.George's Society Of New York"
        ],
        "to": "St. George's Society Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Oceanic Steamship Company - Sonoma",
          "Oceanic Steamship Company _ Sonoma"
        ],
        "to": "Oceanic Steamship Company - Sonoma"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York State Hotel Association",
          "New-york State Hotel Association"
        ],
        "to": "New York State Hotel Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Association Of New York City",
          "(hotel Association Of New York City)"
        ],
        "to": "Hotel Association Of New York City"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(private)",
          "Private"
        ],
        "to": "(private)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Business Men's League Of St. Louis",
          "Business Men's League Of St.Louis"
        ],
        "to": "Business Men's League Of St. Louis"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \\queen Elizabeth\\\"\"",
          "R.M.S. \\queen  Elizabeth\\\"\""
        ],
        "to": "R.M.S. \\queen Elizabeth\\\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pig N'whistle",
          "Pig'n Whistle"
        ],
        "to": "Pig N'whistle"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Regis Hotel",
          "St.Regis Hotel"
        ],
        "to": "St. Regis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota",
          "Military Order Of The Loyal Legion Of The United States.  Commandery Of The State Of Minnesota"
        ],
        "to": "Military Order Of The Loyal Legion Of The United States Commandery Of The State Of Minnesota"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S New Amsterdam",
          "S.S. New Amsterdam"
        ],
        "to": "S.S New Amsterdam"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Red Star Line - Antwerpen -new York",
          "Red Star Line Antwerpen-new York"
        ],
        "to": "Red Star Line - Antwerpen -new York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Rigg's Twentieth Street Restaurant",
          "Riggs' Twentieth Street Restaurant"
        ],
        "to": "Rigg's Twentieth Street Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. Wyoming",
          "U.S.S. Wyoming"
        ],
        "to": "U. S. S. Wyoming"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Penn. Rr - Pullman Dining Car Service",
          "Penn Rr - Pullman Dining Car Service"
        ],
        "to": "Penn. Rr - Pullman Dining Car Service"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "\\the Manor\\\"\"",
          "The Manor"
        ],
        "to": "\\the Manor\\\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(harvard University)",
          "Harvard University"
        ],
        "to": "(harvard University)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Union Pacific  Railroad",
          "Union Pacific Railroad"
        ],
        "to": "Union Pacific  Railroad"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(maharaja Of Baroda)",
          "Maharaja Of Baroda"
        ],
        "to": "(maharaja Of Baroda)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "American Bankers Association",
          "American Bankers' Association"
        ],
        "to": "American Bankers Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Southern Berkshire Society Of New York",
          "Southern Berkshire Society Of New York"
        ],
        "to": "The Southern Berkshire Society Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(238 Eight Avenue)",
          "238 Eight Avenue"
        ],
        "to": "(238 Eight Avenue)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. Parthia",
          "R.M.S. \"parthia\"\"\""
        ],
        "to": "R.M.S. Parthia"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Grocers Hall",
          "Grocers' Hall"
        ],
        "to": "Grocers Hall"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Roger's Restaurant",
          "Rogers'restaurant"
        ],
        "to": "Roger's Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Oceanic Steamship Company - Sierra",
          "Oceanic Steamship Company -sierra"
        ],
        "to": "Oceanic Steamship Company - Sierra"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Willard's Hotel",
          "Willards Hotel"
        ],
        "to": "Willard's Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "King Frederik Viii",
          "(king Frederik Viii)"
        ],
        "to": "King Frederik Viii"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "O.D.",
          "O. D."
        ],
        "to": "O.D."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "B&o Blue Line",
          "B.& O. Blue Line"
        ],
        "to": "B&o Blue Line"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Oceanic Steamship Co. - S.S.Zealandia",
          "Oceanic Steamship Co. S.S.Zealandia"
        ],
        "to": "Oceanic Steamship Co. - S.S.Zealandia"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.G.(?)",
          "Rg"
        ],
        "to": "R.G.(?)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Andrew's Society Of The State Of New York",
          "St.Andrews Society Of The State Of New York"
        ],
        "to": "St. Andrew's Society Of The State Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Essex Hotel   The Colonnades",
          "The Essex Hotel The Colonnades"
        ],
        "to": "The Essex Hotel   The Colonnades"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Nippon Yusen Kaisha - S.S.Kinshin Maru",
          "Nippon Yusen Kaisha -s.S.Kinshin Maru"
        ],
        "to": "Nippon Yusen Kaisha - S.S.Kinshin Maru"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New England Society In The City Of New York",
          "The New England Society In The City Of New York"
        ],
        "to": "New England Society In The City Of New York"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Hotel Astor   The Belvedere Room",
          "The Hotel Astor  The Belvedere Room"
        ],
        "to": "The Hotel Astor   The Belvedere Room"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel La Salle",
          "Hotel Lasalle"
        ],
        "to": "Hotel La Salle"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Charles Hotel",
          "St Charles Hotel"
        ],
        "to": "St. Charles Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Francis Hotel",
          "St.Francis Hotel"
        ],
        "to": "St. Francis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Santa Fe Route",
          "Santa Fe' Route"
        ],
        "to": "Santa Fe Route"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Merchant's Club Of Boston",
          "Merchants' Club Of Boston"
        ],
        "to": "Merchant's Club Of Boston"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Adams' Restaurant",
          "Adam's Restaurant"
        ],
        "to": "Adams' Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ancient And Honorable Artillery Co Of Massachusetts",
          "Ancient And Honorable Artillery Co. Of Massachusetts"
        ],
        "to": "Ancient And Honorable Artillery Co Of Massachusetts"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Waldorf Astoria",
          "The Waldorf-astoria"
        ],
        "to": "The Waldorf Astoria"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Central System",
          "[new York Central System]"
        ],
        "to": "New York Central System"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Paquebot Liberte",
          "Paquebot \\liberte\\\"\""
        ],
        "to": "Paquebot Liberte"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Mcalpin",
          "Hotel Mc Alpin"
        ],
        "to": "Hotel Mcalpin"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Meyer's Hotel",
          "Meyers Hotel"
        ],
        "to": "Meyer's Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Siegel Cooper Co.",
          "Siegel-cooper Co."
        ],
        "to": "Siegel Cooper Co."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Copley-plaza Hotel",
          "Copley Plaza Hotel"
        ],
        "to": "Copley-plaza Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "King Haakon Vii",
          "(king Haakon Vii)"
        ],
        "to": "King Haakon Vii"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Simpson's In The Strand",
          "Simpson's-in-the-strand"
        ],
        "to": "Simpson's In The Strand"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Tyn-y-coed",
          "Tyny Coed"
        ],
        "to": "Tyn-y-coed"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U. S. S. Florida",
          "U.S.S. Florida"
        ],
        "to": "U. S. S. Florida"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Union League Club",
          "(union League Club)"
        ],
        "to": "Union League Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "R.M.S. \\mauretania\\\"\"",
          "R.M.S. Mauretania"
        ],
        "to": "R.M.S. \\mauretania\\\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(king Alexander Of Servia)",
          "King Alexander Of Servia"
        ],
        "to": "(king Alexander Of Servia)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "[restaurant And/or Location Not Given.]",
          "[restaurant And/or Location Not Given]"
        ],
        "to": "[restaurant And/or Location Not Given.]"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Du Musee",
          "Hotel Du Musee'"
        ],
        "to": "Hotel Du Musee"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. America",
          "S.S.America"
        ],
        "to": "S.S. America"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Flat Iron Restaurant & Cafe",
          "Flatiron Restaurant & Cafe"
        ],
        "to": "Flat Iron Restaurant & Cafe"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "U.S.M.S.Philadelphia",
          "Usms Philadelphia"
        ],
        "to": "U.S.M.S.Philadelphia"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel St. Regis",
          "Hotel St.Regis"
        ],
        "to": "Hotel St. Regis"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Dinner Menu, S. S. Vaderland, March 18th, 1910.",
          "Dinner Menu, S.S. Vaderland, March 18th, 1910."
        ],
        "to": "Dinner Menu, S. S. Vaderland, March 18th, 1910."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Pirate's House",
          "Pirates' House"
        ],
        "to": "Pirate's House"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ritz Carlton Hotel",
          "Ritz-carlton Hotel"
        ],
        "to": "Ritz Carlton Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Wisconsin Society - Sons Of The American Revolution",
          "Wisconsin Society Sons Of The American Revolution"
        ],
        "to": "Wisconsin Society - Sons Of The American Revolution"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Master Printers Association",
          "Master Printers' Association"
        ],
        "to": "Master Printers Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. Minnetonka",
          "S.S. \"minnetonka\"\"\""
        ],
        "to": "S.S. Minnetonka"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Profile House  And Hotel Vendome",
          "Profile House And Hotel Vendome"
        ],
        "to": "Profile House  And Hotel Vendome"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Cobble Stones",
          "The Cobblestones"
        ],
        "to": "The Cobble Stones"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"frederik Viii\"",
          "S.S. Frederik Viii"
        ],
        "to": "S.S. \"frederik Viii\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(king Christian Ix Of Denmark)",
          "King Christian Ix Of Denmark"
        ],
        "to": "(king Christian Ix Of Denmark)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Fraunces' Tavern",
          "Fraunces Tavern"
        ],
        "to": "Fraunces' Tavern"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "National Wholesale  Druggists' Association",
          "National Wholesale Druggists' Association"
        ],
        "to": "National Wholesale  Druggists' Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. United States",
          "S. S. United States"
        ],
        "to": "S.S. United States"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Casino   Central Park",
          "Casino Central Park"
        ],
        "to": "Casino   Central Park"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "King Edward Vii",
          "(king Edward Vii)"
        ],
        "to": "King Edward Vii"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(american Line)",
          "American Line"
        ],
        "to": "(american Line)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(king Umberto)",
          "King Umberto"
        ],
        "to": "(king Umberto)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ritz Carlton",
          "Ritz-carlton"
        ],
        "to": "Ritz Carlton"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St.Louis Club",
          "St. Louis Club"
        ],
        "to": "St.Louis Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "St. Denis Hotel",
          "St, Denis Hotel"
        ],
        "to": "St. Denis Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Met-life Building",
          "Metlife Building"
        ],
        "to": "Met-life Building"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Flat Iron Restaurant",
          "Flatiron Restaurant"
        ],
        "to": "Flat Iron Restaurant"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(down Town Club)",
          "Downtown Club"
        ],
        "to": "(down Town Club)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "The Merchant's Club Of Chicago",
          "The Merchants Club Of Chicago"
        ],
        "to": "The Merchant's Club Of Chicago"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "to": "New York Central & Hudson River R.R."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Manhattan Club",
          "(manhattan Club)"
        ],
        "to": "Manhattan Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "(majestic Hotel)",
          "Majestic Hotel"
        ],
        "to": "(majestic Hotel)"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Century Club",
          "(century Club?)"
        ],
        "to": "Century Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cunard Steam Ship Company Limited",
          "Cunard Steamship Company Limited"
        ],
        "to": "Cunard Steam Ship Company Limited"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Smith & Mc Nell",
          "Smith & Mcnell"
        ],
        "to": "Smith & Mc Nell"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Chicago Stationers Association",
          "Chicagos Stationers Association"
        ],
        "to": "Chicago Stationers Association"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. American Shipper",
          "S.S. \"american Shipper\"\"\""
        ],
        "to": "S.S. American Shipper"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "S.S. \"ile De France\"\"\"",
          "S.S. Ile De France"
        ],
        "to": "S.S. \"ile De France\"\"\""
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Northern Steamship Company/great Northern Ry Line.",
          "(northern Steamship Company/great Northern Ry Line.)"
        ],
        "to": "Northern Steamship Company/great Northern Ry Line."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "to": "Cosmopolitan Hotel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Provinzial Liedertafel",
          "Provinzial-liedertafel"
        ],
        "to": "Provinzial Liedertafel"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Harvard Club",
          "(harvard Club)"
        ],
        "to": "Harvard Club"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "La Crépe",
          "La Crêpe"
        ],
        "to": "La Crépe"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "A.W. Dennett",
          "A.W.Dennett"
        ],
        "to": "A.W. Dennett"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Us Army - Subsistence Dept.",
          "U.S. Army - Subsistence Dept."
        ],
        "to": "Us Army - Subsistence Dept."
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Ancient Accepted Scottish Rite",
          "Ancient & Accepted Scottish Rite"
        ],
        "to": "Ancient Accepted Scottish Rite"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Hotel Copley Plaza",
          "Hotel Copley-plaza"
        ],
        "to": "Hotel Copley Plaza"
      }
    ]
  },
  {
    "op": "core/column-removal",
    "description": "Remove column event",
    "columnName": "event"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column venue",
    "columnName": "venue"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column place",
    "columnName": "place"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column physical_description",
    "columnName": "physical_description"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column occasion",
    "columnName": "occasion"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column keywords",
    "columnName": "keywords"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column language",
    "columnName": "language"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column location_type",
    "columnName": "location_type"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column call_number using expression jython:return value.split(\"_\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "call_number",
    "expression": "jython:return value.split(\"_\")[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column date using expression value.toDate()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column currency_symbol",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "currency_symbol",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "s",
          "S",
          "S/."
        ],
        "to": "$"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "C$",
          "c"
        ],
        "to": "$"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "f",
          "F"
        ],
        "to": "f"
      },
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "kr.",
          "Kr."
        ],
        "to": "kr."
      }
    ]
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column page_count using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "page_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column dish_count using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "dish_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column id using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column status using expression value.toTitlecase()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "status",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column notes using expression jython:return value.split(\";\")[0]",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "notes",
    "expression": "jython:return value.split(\";\")[0]",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/blank-down",
    "description": "Blank down cells in column id",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "id"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column name using expression value.toString()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name",
    "expression": "value.toString()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/blank-down",
    "description": "Blank down cells in column name",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "name"
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "forNonBlank(cell.recon.features.nameMatch, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": "(blank)",
                "l": "(blank)"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "name: best candidate's name match?",
          "omitBlank": false,
          "type": "list",
          "columnName": "name"
        }
      ]
    }
  }
]